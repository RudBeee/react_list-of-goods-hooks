{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","classNames","onClick","e","currentTarget","classList","toggle","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAcMC,EAAY,UAAOR,GAiBzB,OAfAQ,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITT,GACFE,EAAaQ,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBACT,CACE,WAAYf,IAAaL,EAASa,WAGxCQ,QAAS,kBAAOf,EAAYN,EAASa,WARvC,iCAaA,wBACEM,KAAK,SACLD,UACEE,IAAW,oBACT,CACE,WAAYf,IAAaL,EAASe,SAGxCM,QAAS,kBAAOf,EAAYN,EAASe,SARvC,4BAaA,wBACEI,KAAK,SACLD,UACEE,IAAW,oBACT,CACE,YAAab,IAGnBc,QAlEQ,SAACC,GACfA,EAAEC,cAAcC,UAAUC,OAAO,YACjCjB,GAAeD,IAwDX,sBAaGF,IAAaL,EAASI,MAAQG,IAC/B,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAtEU,WAClB,OACEf,EAAYN,EAASI,MACrBI,GAAc,IAgEV,sBAWJ,6BACE,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC/GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.377ce246.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reverse = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.currentTarget.classList.toggle('is-light');\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    return (\n      setSortType(SortType.NONE),\n      setIsReversed(false)\n    );\n  };\n\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              })\n          }\n          onClick={() => (setSortType(SortType.ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              })\n          }\n          onClick={() => (setSortType(SortType.LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning',\n              {\n                'is-light': !isReversed,\n              })\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        { (sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}